interface IBackup{
    public function backup()
}

class MySQLBackup implements IBackup
start_class
    private options : BackupOption
	
    public function constructor(options : BackupOption)
	start_function
        this.options = options;
    end_function

    public function backup()
	start_function
        // script de dump Mysql
    end_function
end_class

class BackupFactory
start_class
	private constant MYSQL = "MySQL"
	
    public static function create(options : BackupOption)
	start_function
	
        if (options.getSGBD() == BackupFactory.MYSQL)
            return new MySQLBackup(options)
			
        throw new Exception("Unknown SGBD")
    end_function
	
	public static function getSupportedSGBD() :  array of BackupFactory constants
	start_function
		res=[]
		res[]= BackupFactory.MYSQL
		return res
    end_function
	
end_class

option = BackupOption()
option.ask()

backup = BackupFactory.create(option)
backup->backup()